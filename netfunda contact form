<?php
/**
 * Plugin Name: Netfunda Contact Form
 *Plugin URI: http://debi.dev.netfunda.com/Netfunda-contact-form.zip
 * Description: This is a contact form plugin By Netfunda Technologies. You can use shortcode [paste-it-go-get-contact-form] to display form on any page in the wordpress.When activated and the short code is paste in any of your page it simply create a table wp_contact in your wordpress database and after submitting the form it stores the data in the wp_contact table .For more info mail us at info@netfunda.com Thank You for using it.
 * Version: 2.0.0
 * Author: Netfunda Technologies
 * Author URI: http://www.netfunda.com
 * License: GNU General Public License v3 or later
 * License URI: http://debi.dev.netfunda.com/Netfunda-contact-form.zip
 * Text Domain: netfunda
 * Domain Path: cf
 */


// Load the plugin's text domain



function contact_init() { 

	load_plugin_textdomain( 'netfunda', false, dirname( plugin_basename( __FILE__ ) ) . '/cf' );
}

add_action('plugins_loaded', 'contact_init');

 // Enqueues plugin scripts

function contact_scripts() {	
	     if(!is_admin())
	   {
		
          wp_enqueue_style('contact_style', plugins_url('contact_style.css',__FILE__));
	   }
}

add_action('wp_enqueue_scripts', 'contact_scripts');

//include page contact_main.php

include 'contact_main.php';
//use global $wpdb to get access over database.
global $wpdb;
//A table with name wp_contact has been created here.
          $tablename = "wp_contact";   
          $query = "CREATE TABLE IF NOT EXISTS`" . $tablename . "` (
          `id` mediumint(9) NOT NULL AUTO_INCREMENT,
          `name` varchar(60) NOT NULL,
          `email` varchar(60) NOT NULL,
          `subject` varchar(60) NOT NULL,
          `message` varchar(60) NOT NULL,
          PRIMARY KEY  (`id`)
          );";

require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
  dbDelta($query);

//class-wp-list-table.php is included here .

if( ! class_exists( 'WP_List_Table' ) ) {

    require_once( ABSPATH . 'wp-admin/includes/class-wp-list-table.php' );
}

//Define class My_Example_List_Table which extends WP_List_Table class .

class My_Example_List_Table extends WP_List_Table {
         var $example_data;
    
    function __construct() {

    parent::__construct( array(
            'singular'  => __( 'Contact', 'mylisttable' ),     //singular name of the listed records
            'plural'    => __( 'Contacts', 'mylisttable' ),   //plural name of the listed records
            'ajax'      => false                              //does this table support ajax?
        ) );


      add_action( 'admin_head', array( &$this, 'admin_header' ) );            

        }

      function admin_header() {

        }




         function no_items() {
         _e( 'No Contacts found, dude.' );
        }





  function column_default( $item, $column_name ) {
           switch( $column_name ) { 
           case 'id':
           case 'name':
           case 'email':
           case 'subject':
           case 'message':
           return $item[ $column_name ];
           default:
           return print_r( $item, true ) ; //Show the whole array for troubleshooting purposes
            
            }
        }

  function get_sortable_columns() {

            $sortable_columns = array(
            'id'  => array('id',false),
            'name' => array('name',false),
            'email'   => array('email',false),
            'subject' => array('subject',false),
            'message' => array('message',false)
            
             );
            return $sortable_columns;
          
        }




    function get_columns() {

    //use global $wpdb to get access over database.
  
      global $wpdb;
      $querydata = $wpdb->get_results(
       "
       SELECT * FROM wp_contact
       
       "
      );

  //foreach loop go access data from database.

    foreach ($querydata as $key => $value) {
    
    foreach ($value as $key1 => $value1) {
        
         if($key1=='id')
         $this->example_data[$key]['id']=$value1;
         if($key1=='name')
         $this->example_data[$key]['name']=$value1;
         if($key1=='email')
         $this->example_data[$key]['email']=$value1;
         if($key1=='subject')
         $this->example_data[$key]['subject']=$value1;
         if($key1=='message')
         $this->example_data[$key]['message']=$value1;
       
       }
  
   }

      foreach ($querydata as $querydatum ) {
   
            $columns = array(
            'cb'        => '<input type="checkbox" name="$querydatum->id"/>',
            'id' => __( 'ID', 'mylisttable' ),
            'name'    => __( 'Name', 'mylisttable' ),
            'email'      => __( 'Email', 'mylisttable' ),
            'subject'      => __( 'Subject', 'mylisttable' ),
            'message'      => __( 'Message', 'mylisttable' )

            );

            return $columns;
         }
      }

    function usort_reorder( $a, $b ) {

      // If no sort, default to title

   $orderby = ( ! empty( $_GET['orderby'] ) ) ? $_GET['orderby'] : 'id';

    // If no order, default to asc

    $order = ( ! empty($_GET['order'] ) ) ? $_GET['order'] : 'asc';

    // Determine sort order

    $result = strcmp( $a[$orderby], $b[$orderby] );

    // Send final sort direction to usort
  
    return ( $order === 'asc' ) ? $result : -$result;
  
  }




            function column_id($item){
            $actions = array(
           // 'edit'      => sprintf('<a href="?page=%s&action=%s&id1=%s">Edit</a>',$_REQUEST['page'],'edit',$item['id']),
            'delete'    => sprintf('<a href="?page=%s&action=%s&id=%s">Delete</a>',$_REQUEST['page'],'delete',$item['id'])
            
             );


        if (isset($_GET["id"])) {

        global $wpdb;
        $querydata = $wpdb->get_results(
       "
           DELETE FROM wp_contact WHERE id = $_GET[id];
      "
           );

          }

          return sprintf('%1$s %2$s', $item['id'], $this->row_actions($actions) );
  
        }





function get_bulk_actions() {
  $actions = array(
    'delete'    => 'Delete'
 
  );
 //$this->process_bulk_action();
  return $actions;
}

function column_cb($item) {
   $m=$_POST['activate']; 
    for( $i=0;$i<=count($m);$i++)
     {

      global $wpdb;
 $querydata = $wpdb->get_results(
  "
   DELETE FROM wp_contact WHERE id = '$m[$i]'

  "
  );

     }


  return sprintf(
            '<input type="checkbox" name="activate[]" value="%s" />', $item['id']
        );  

    }



function prepare_items() {
  $columns  = $this->get_columns();
  $hidden   = array();
  $sortable = $this->get_sortable_columns();
  $this->_column_headers = array( $columns, $hidden, $sortable );
  usort( $this->example_data, array( &$this, 'usort_reorder' ) );
  
  $per_page = 5;
  $current_page = $this->get_pagenum();
  $total_items = count( $this->example_data );

  // only ncessary because we have sample data
  $this->found_data = array_slice( $this->example_data,( ( $current_page-1 )* $per_page ), $per_page );

  $this->set_pagination_args( array(
    'total_items' => $total_items,                  //WE have to calculate the total number of items
    'per_page'    => $per_page                     //WE have to determine how many items to show on a page
  ) );
  $this->items = $this->found_data;
   //$this->process_bulk_action();
}

} //End Of class.



function my_add_menu_items(){
  $hook = add_menu_page( 'Netfunda Contact Data', 'Contact Data', 'activate_plugins', 'contact', 'my_render_list_page' );
  add_action( "load-$hook", 'add_options' );
}


function add_options() {
  global $myListTable;
  $option = 'per_page';
  $args = array(
         'label' => 'Contacts',
         'default' => 10,
         'option' => 'Contacts_per_page'
         );
  add_screen_option( $option, $args );
  $myListTable = new My_Example_List_Table();
}
add_action( 'admin_menu', 'my_add_menu_items' );



function my_render_list_page(){
  

  global $myListTable;
  echo '</pre><div class="wrap"><h2>Displaying list of Contacts :</h2>'; 
  $myListTable->prepare_items(); 
?>
  <form method="post">
    <input type="hidden" name="page" value="ttest_list_table">
    <?php
    $myListTable->search_box( 'search', 'search_id' );

  $myListTable->display(); 
  echo '</form></div>'; 
}
